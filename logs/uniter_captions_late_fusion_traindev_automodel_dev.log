2021-04-16 10:30:50.781261: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1
Some weights of BertU were not initialized from the model checkpoint at bert-large-cased and are newly initialized: ['bert.img_embeddings.img_linear.weight', 'bert.img_embeddings.img_linear.bias', 'bert.img_embeddings.img_layer_norm.weight', 'bert.img_embeddings.img_layer_norm.bias', 'bert.img_embeddings.pos_layer_norm.weight', 'bert.img_embeddings.pos_layer_norm.bias', 'bert.img_embeddings.pos_linear.weight', 'bert.img_embeddings.pos_linear.bias', 'bert.img_embeddings.LayerNorm.weight', 'bert.img_embeddings.LayerNorm.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of RobertaModel were not initialized from the model checkpoint at /home/ML_courses/DL2020/efratblaier/test-mlm-large-batch-roberta-100-epochs-captions-no-rand and are newly initialized: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Load 8596 data from split(s) train.
Start to load Faster-RCNN detected objects from data/HM_img.tsv
Loaded 8596 images in file data/HM_img.tsv in 71 seconds.
Use 8596 data in torch dataset

Load 500 data from split(s) dev_seen.
Start to load Faster-RCNN detected objects from data/HM_img.tsv
Loaded 500 images in file data/HM_img.tsv in 54 seconds.
Use 500 data in torch dataset

UNEXPECTED:  []
MISSING:  ['bert.img_embeddings.img_linear.weight', 'bert.img_embeddings.img_linear.bias', 'bert.img_embeddings.img_layer_norm.weight', 'bert.img_embeddings.img_layer_norm.bias', 'bert.img_embeddings.pos_layer_norm.weight', 'bert.img_embeddings.pos_layer_norm.bias', 'bert.img_embeddings.pos_linear.weight', 'bert.img_embeddings.pos_linear.bias', 'bert.img_embeddings.LayerNorm.weight', 'bert.img_embeddings.LayerNorm.bias']
ERRORS:  []
REINITING:  Linear(in_features=1792, out_features=3584, bias=True)
REINITING:  GeLU()
REINITING:  LayerNorm((3584,), eps=1e-12, elementwise_affine=True)
REINITING:  Linear(in_features=3584, out_features=2, bias=True)
REINITING:  Sequential(
  (0): Linear(in_features=1792, out_features=3584, bias=True)
  (1): GeLU()
  (2): LayerNorm((3584,), eps=1e-12, elementwise_affine=True)
  (3): Linear(in_features=3584, out_features=2, bias=True)
)
Load pre-trained model from ./data/uniter-large.pt

Weights in loaded but not in model:
cls.predictions.bias
cls.predictions.decoder.weight
cls.predictions.transform.LayerNorm.bias
cls.predictions.transform.LayerNorm.weight
cls.predictions.transform.dense.bias
cls.predictions.transform.dense.weight
feat_regress.bias
feat_regress.net.0.bias
feat_regress.net.0.weight
feat_regress.net.2.bias
feat_regress.net.2.weight
feat_regress.weight
img_embeddings.mask_embedding.weight
itm_output.bias
itm_output.weight
region_classifier.net.0.bias
region_classifier.net.0.weight
region_classifier.net.2.bias
region_classifier.net.2.weight
region_classifier.net.3.bias
region_classifier.net.3.weight

Weights in model but not in loaded:
embeddings.position_ids

Total Iters: 5372
Splits in Train data: ['train']
Splits in Valid data: ['dev_seen']
Batches: 2149
/home/ML_courses/DL2020/efratblaier/vilio_env/lib/python3.7/site-packages/torchcontrib/optim/swa.py:130: UserWarning: Casting swa_start, swa_freq to int
  warnings.warn("Casting swa_start, swa_freq to int")
tensor([-0.0334, -3.4146], device='cuda:0')
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 0(250): Train AC 62.00 RA 59.1956 LOSS 674.9183

Epoch(U) 0(250): DEV AC 52.20 RA 61.1704 
Epoch(U) 0(250): BEST AC 52.20 RA 61.1704 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 0(500): Train AC 64.30 RA 61.1001 LOSS 647.4706

Epoch(U) 0(500): DEV AC 54.20 RA 64.2877 
Epoch(U) 0(500): BEST AC 54.20 RA 64.2877 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 0(750): Train AC 66.15 RA 65.6163 LOSS 603.5092

Epoch(U) 0(750): DEV AC 59.60 RA 66.7120 
Epoch(U) 0(750): BEST AC 59.60 RA 66.7120 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 0(1000): Train AC 67.83 RA 69.0153 LOSS 570.4634

Epoch(U) 0(1000): DEV AC 62.80 RA 69.0195 
Epoch(U) 0(1000): BEST AC 62.80 RA 69.0195 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
tensor([-0.2832, -1.3999], device='cuda:0')

Epoch(U) 1(1250): Train AC 82.53 RA 87.9827 LOSS 450.7323

Epoch(U) 1(1250): DEV AC 62.20 RA 75.3244 
Epoch(U) 1(1250): BEST AC 62.20 RA 75.3244 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 1(1500): Train AC 82.54 RA 87.9107 LOSS 433.7188

Epoch(U) 1(1500): DEV AC 66.60 RA 75.4637 
Epoch(U) 1(1500): BEST AC 66.60 RA 75.4637 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 1(1750): Train AC 82.45 RA 88.0753 LOSS 423.6237

Epoch(U) 1(1750): DEV AC 65.80 RA 74.2331 
Epoch(U) 1(1750): BEST AC 66.60 RA 75.4637 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 1(2000): Train AC 82.57 RA 88.2274 LOSS 424.2800

Epoch(U) 1(2000): DEV AC 67.40 RA 75.6861 
Epoch(U) 1(2000): BEST AC 67.40 RA 75.6861 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
tensor([-0.0161, -4.1364], device='cuda:0')

Epoch(U) 2(2250): Train AC 92.52 RA 97.0782 LOSS 324.0014

Epoch(U) 2(2250): DEV AC 66.60 RA 78.2929 
Epoch(U) 2(2250): BEST AC 66.60 RA 78.2929 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 2(2500): Train AC 92.47 RA 96.5719 LOSS 287.7716

Epoch(U) 2(2500): DEV AC 64.40 RA 78.4465 
Epoch(U) 2(2500): BEST AC 64.40 RA 78.4465 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 2(2750): Train AC 91.96 RA 96.6438 LOSS 272.3936

Epoch(U) 2(2750): DEV AC 67.20 RA 79.0018 
Epoch(U) 2(2750): BEST AC 67.20 RA 79.0018 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 2(3000): Train AC 92.00 RA 96.5971 LOSS 296.7573

Epoch(U) 2(3000): DEV AC 66.20 RA 78.6161 
Epoch(U) 2(3000): BEST AC 67.20 RA 79.0018 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
tensor([-0.0064, -5.0519], device='cuda:0')

Epoch(U) 3(3250): Train AC 95.98 RA 98.7246 LOSS 249.1108

Epoch(U) 3(3250): DEV AC 63.20 RA 77.5088 
Epoch(U) 3(3250): BEST AC 67.20 RA 79.0018 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 3(3500): Train AC 96.58 RA 99.0086 LOSS 138.9223

Epoch(U) 3(3500): DEV AC 66.80 RA 77.9520 
Epoch(U) 3(3500): BEST AC 67.20 RA 79.0018 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 3(3750): Train AC 96.71 RA 99.1867 LOSS 140.9752

Epoch(U) 3(3750): DEV AC 68.40 RA 78.2753 
Epoch(U) 3(3750): BEST AC 67.20 RA 79.0018 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 3(4000): Train AC 96.96 RA 99.2579 LOSS 121.2211

Epoch(U) 3(4000): DEV AC 68.60 RA 78.1072 
Epoch(U) 3(4000): BEST AC 67.20 RA 79.0018 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 3(4250): Train AC 96.80 RA 99.2005 LOSS 164.4927

Epoch(U) 3(4250): DEV AC 69.80 RA 78.6465 
Epoch(U) 3(4250): BEST AC 67.20 RA 79.0018 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
tensor([-1.7259e-03, -6.3629e+00], device='cuda:0')

Epoch(U) 4(4500): Train AC 97.00 RA 98.9812 LOSS 175.9084

Epoch(U) 4(4500): DEV AC 65.80 RA 76.8911 
Epoch(U) 4(4500): BEST AC 67.20 RA 79.0018 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 4(4750): Train AC 97.11 RA 98.9464 LOSS 150.7903

Epoch(U) 4(4750): DEV AC 67.20 RA 75.4973 
Epoch(U) 4(4750): BEST AC 67.20 RA 79.0018 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 4(5000): Train AC 96.89 RA 98.9731 LOSS 168.9303

Epoch(U) 4(5000): DEV AC 64.20 RA 76.2878 
Epoch(U) 4(5000): BEST AC 67.20 RA 79.0018 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 4(5250): Train AC 96.67 RA 99.0147 LOSS 184.0701

Epoch(U) 4(5250): DEV AC 65.40 RA 76.8847 
Epoch(U) 4(5250): BEST AC 67.20 RA 79.0018 
Load model from ./data/LASTtrain.pth
Load 500 data from split(s) dev_seen.
Start to load Faster-RCNN detected objects from data/HM_img.tsv
Loaded 500 images in file data/HM_img.tsv in 53 seconds.
Use 500 data in torch dataset

/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 500 entries, 0 to 499
Data columns (total 3 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   id      500 non-null    int64  
 1   proba   500 non-null    float64
 2   label   500 non-null    int64  
dtypes: float64(1), int64(2)
memory usage: 11.8 KB
None
(0.69, 0.7814245251316189)
