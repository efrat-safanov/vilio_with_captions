2021-04-16 09:30:16.389087: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1
Some weights of BertU were not initialized from the model checkpoint at bert-large-cased and are newly initialized: ['bert.img_embeddings.img_linear.weight', 'bert.img_embeddings.img_linear.bias', 'bert.img_embeddings.img_layer_norm.weight', 'bert.img_embeddings.img_layer_norm.bias', 'bert.img_embeddings.pos_layer_norm.weight', 'bert.img_embeddings.pos_layer_norm.bias', 'bert.img_embeddings.pos_linear.weight', 'bert.img_embeddings.pos_linear.bias', 'bert.img_embeddings.LayerNorm.weight', 'bert.img_embeddings.LayerNorm.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of RobertaModel were not initialized from the model checkpoint at /home/ML_courses/DL2020/efratblaier/test-mlm-large-batch-roberta-100-epochs-captions-no-rand and are newly initialized: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Load 8596 data from split(s) train.
Start to load Faster-RCNN detected objects from data/HM_img.tsv
Loaded 8596 images in file data/HM_img.tsv in 63 seconds.
Use 8596 data in torch dataset

Load 500 data from split(s) dev_seen.
Start to load Faster-RCNN detected objects from data/HM_img.tsv
Loaded 500 images in file data/HM_img.tsv in 51 seconds.
Use 500 data in torch dataset

UNEXPECTED:  []
MISSING:  ['bert.img_embeddings.img_linear.weight', 'bert.img_embeddings.img_linear.bias', 'bert.img_embeddings.img_layer_norm.weight', 'bert.img_embeddings.img_layer_norm.bias', 'bert.img_embeddings.pos_layer_norm.weight', 'bert.img_embeddings.pos_layer_norm.bias', 'bert.img_embeddings.pos_linear.weight', 'bert.img_embeddings.pos_linear.bias', 'bert.img_embeddings.LayerNorm.weight', 'bert.img_embeddings.LayerNorm.bias']
ERRORS:  []
REINITING:  Linear(in_features=1792, out_features=3584, bias=True)
REINITING:  GeLU()
REINITING:  LayerNorm((3584,), eps=1e-12, elementwise_affine=True)
REINITING:  Linear(in_features=3584, out_features=2, bias=True)
REINITING:  Sequential(
  (0): Linear(in_features=1792, out_features=3584, bias=True)
  (1): GeLU()
  (2): LayerNorm((3584,), eps=1e-12, elementwise_affine=True)
  (3): Linear(in_features=3584, out_features=2, bias=True)
)
Load pre-trained model from ./data/uniter-large.pt

Weights in loaded but not in model:
cls.predictions.bias
cls.predictions.decoder.weight
cls.predictions.transform.LayerNorm.bias
cls.predictions.transform.LayerNorm.weight
cls.predictions.transform.dense.bias
cls.predictions.transform.dense.weight
feat_regress.bias
feat_regress.net.0.bias
feat_regress.net.0.weight
feat_regress.net.2.bias
feat_regress.net.2.weight
feat_regress.weight
img_embeddings.mask_embedding.weight
itm_output.bias
itm_output.weight
region_classifier.net.0.bias
region_classifier.net.0.weight
region_classifier.net.2.bias
region_classifier.net.2.weight
region_classifier.net.3.bias
region_classifier.net.3.weight

Weights in model but not in loaded:
embeddings.position_ids

Total Iters: 5375
Splits in Train data: ['train']
Splits in Valid data: ['dev_seen']
Batches: 1075
/home/ML_courses/DL2020/efratblaier/vilio_env/lib/python3.7/site-packages/torchcontrib/optim/swa.py:130: UserWarning: Casting swa_start, swa_freq to int
  warnings.warn("Casting swa_start, swa_freq to int")
tensor([-0.3716, -1.1701], device='cuda:0')
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 0(250): Train AC 61.55 RA 56.9334 LOSS 1370.5546

Epoch(U) 0(250): DEV AC 57.40 RA 65.9279 
Epoch(U) 0(250): BEST AC 57.40 RA 65.9279 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 0(500): Train AC 63.30 RA 59.1568 LOSS 1322.6359

Epoch(U) 0(500): DEV AC 53.60 RA 67.4753 
Epoch(U) 0(500): BEST AC 53.60 RA 67.4753 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 0(750): Train AC 64.68 RA 62.0727 LOSS 1296.7072

Epoch(U) 0(750): DEV AC 56.20 RA 71.7271 
Epoch(U) 0(750): BEST AC 56.20 RA 71.7271 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 0(1000): Train AC 66.20 RA 65.8877 LOSS 1184.6506

Epoch(U) 0(1000): DEV AC 65.60 RA 74.2251 
Epoch(U) 0(1000): BEST AC 65.60 RA 74.2251 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
tensor([-0.0589, -2.8613], device='cuda:0')

Epoch(U) 1(1250): Train AC 81.36 RA 87.0914 LOSS 966.3966

Epoch(U) 1(1250): DEV AC 63.00 RA 74.8316 
Epoch(U) 1(1250): BEST AC 63.00 RA 74.8316 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 1(1500): Train AC 80.56 RA 86.8469 LOSS 898.8157

Epoch(U) 1(1500): DEV AC 66.00 RA 76.1886 
Epoch(U) 1(1500): BEST AC 66.00 RA 76.1886 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 1(1750): Train AC 81.41 RA 87.4907 LOSS 833.2257

Epoch(U) 1(1750): DEV AC 67.20 RA 75.0812 
Epoch(U) 1(1750): BEST AC 66.00 RA 76.1886 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 1(2000): Train AC 81.72 RA 87.7624 LOSS 843.0567

Epoch(U) 1(2000): DEV AC 66.20 RA 76.1294 
Epoch(U) 1(2000): BEST AC 66.00 RA 76.1886 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
tensor([-0.0220, -3.8258], device='cuda:0')

Epoch(U) 2(2250): Train AC 92.50 RA 96.8530 LOSS 663.9701

Epoch(U) 2(2250): DEV AC 68.00 RA 78.0992 
Epoch(U) 2(2250): BEST AC 68.00 RA 78.0992 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 2(2500): Train AC 92.00 RA 96.7532 LOSS 591.7118

Epoch(U) 2(2500): DEV AC 69.80 RA 77.8288 
Epoch(U) 2(2500): BEST AC 68.00 RA 78.0992 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 2(2750): Train AC 92.15 RA 97.1380 LOSS 489.4357

Epoch(U) 2(2750): DEV AC 68.80 RA 77.6672 
Epoch(U) 2(2750): BEST AC 68.00 RA 78.0992 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 2(3000): Train AC 92.31 RA 97.1043 LOSS 612.6571

Epoch(U) 2(3000): DEV AC 66.60 RA 78.0464 
Epoch(U) 2(3000): BEST AC 68.00 RA 78.0992 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
tensor([-3.9229e-03, -5.5429e+00], device='cuda:0')

Epoch(U) 3(3250): Train AC 98.00 RA 99.3749 LOSS 520.4928

Epoch(U) 3(3250): DEV AC 65.40 RA 77.0143 
Epoch(U) 3(3250): BEST AC 68.00 RA 78.0992 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 3(3500): Train AC 97.59 RA 99.4072 LOSS 238.0843

Epoch(U) 3(3500): DEV AC 68.20 RA 77.9760 
Epoch(U) 3(3500): BEST AC 68.00 RA 78.0992 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 3(3750): Train AC 97.64 RA 99.4589 LOSS 234.5957

Epoch(U) 3(3750): DEV AC 66.40 RA 77.0671 
Epoch(U) 3(3750): BEST AC 68.00 RA 78.0992 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 3(4000): Train AC 97.50 RA 99.4035 LOSS 283.0266

Epoch(U) 3(4000): DEV AC 66.60 RA 77.5536 
Epoch(U) 3(4000): BEST AC 68.00 RA 78.0992 
Traceback (most recent call last):
  File "hm.py", line 391, in <module>
    main()
  File "hm.py", line 358, in main
    hm.train(hm.train_tuple, hm.valid_tuple)
  File "hm.py", line 185, in train
    logit = self.model(sent, caption, (feats, boxes))
  File "/home/ML_courses/DL2020/efratblaier/vilio_env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/ML_courses/DL2020/efratblaier/vilio/entryU.py", line 210, in forward
    unimodal_out = self.unimodal_model(capt_ids.cuda())
  File "/home/ML_courses/DL2020/efratblaier/vilio_env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/ML_courses/DL2020/efratblaier/vilio/src/vilio/transformers/modeling_bert.py", line 829, in forward
    return_dict=return_dict,
  File "/home/ML_courses/DL2020/efratblaier/vilio_env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/ML_courses/DL2020/efratblaier/vilio/src/vilio/transformers/modeling_bert.py", line 484, in forward
    output_attentions,
  File "/home/ML_courses/DL2020/efratblaier/vilio_env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/ML_courses/DL2020/efratblaier/vilio/src/vilio/transformers/modeling_bert.py", line 427, in forward
    self.chunk_size_feed_forward, self.seq_len_dim, self.feed_forward_chunk, attention_output
  File "/home/ML_courses/DL2020/efratblaier/vilio/src/vilio/transformers/modeling_utils.py", line 1514, in apply_chunking_to_forward
    return forward_fn(*input_tensors)
  File "/home/ML_courses/DL2020/efratblaier/vilio/src/vilio/transformers/modeling_bert.py", line 433, in feed_forward_chunk
    intermediate_output = self.intermediate(attention_output)
  File "/home/ML_courses/DL2020/efratblaier/vilio_env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/ML_courses/DL2020/efratblaier/vilio/src/vilio/transformers/modeling_bert.py", line 364, in forward
    hidden_states = self.intermediate_act_fn(hidden_states)
  File "/home/ML_courses/DL2020/efratblaier/vilio_env/lib/python3.7/site-packages/torch/nn/functional.py", line 1369, in gelu
    return torch._C._nn.gelu(input)
RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 11.93 GiB total capacity; 11.15 GiB already allocated; 1.94 MiB free; 11.32 GiB reserved in total by PyTorch)
2021-04-16 10:18:18.304070: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1
Some weights of BertU were not initialized from the model checkpoint at bert-large-cased and are newly initialized: ['bert.img_embeddings.img_linear.weight', 'bert.img_embeddings.img_linear.bias', 'bert.img_embeddings.img_layer_norm.weight', 'bert.img_embeddings.img_layer_norm.bias', 'bert.img_embeddings.pos_layer_norm.weight', 'bert.img_embeddings.pos_layer_norm.bias', 'bert.img_embeddings.pos_linear.weight', 'bert.img_embeddings.pos_linear.bias', 'bert.img_embeddings.LayerNorm.weight', 'bert.img_embeddings.LayerNorm.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of RobertaModel were not initialized from the model checkpoint at /home/ML_courses/DL2020/efratblaier/test-mlm-large-batch-roberta-100-epochs-captions-no-rand and are newly initialized: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Load 9096 data from split(s) traindev.
Start to load Faster-RCNN detected objects from data/HM_img.tsv
Loaded 9096 images in file data/HM_img.tsv in 58 seconds.
Use 9096 data in torch dataset

Load 500 data from split(s) dev_seen.
Start to load Faster-RCNN detected objects from data/HM_img.tsv
Loaded 500 images in file data/HM_img.tsv in 38 seconds.
Use 500 data in torch dataset

UNEXPECTED:  []
MISSING:  ['bert.img_embeddings.img_linear.weight', 'bert.img_embeddings.img_linear.bias', 'bert.img_embeddings.img_layer_norm.weight', 'bert.img_embeddings.img_layer_norm.bias', 'bert.img_embeddings.pos_layer_norm.weight', 'bert.img_embeddings.pos_layer_norm.bias', 'bert.img_embeddings.pos_linear.weight', 'bert.img_embeddings.pos_linear.bias', 'bert.img_embeddings.LayerNorm.weight', 'bert.img_embeddings.LayerNorm.bias']
ERRORS:  []
REINITING:  Linear(in_features=1792, out_features=3584, bias=True)
REINITING:  GeLU()
REINITING:  LayerNorm((3584,), eps=1e-12, elementwise_affine=True)
REINITING:  Linear(in_features=3584, out_features=2, bias=True)
REINITING:  Sequential(
  (0): Linear(in_features=1792, out_features=3584, bias=True)
  (1): GeLU()
  (2): LayerNorm((3584,), eps=1e-12, elementwise_affine=True)
  (3): Linear(in_features=3584, out_features=2, bias=True)
)
Load pre-trained model from ./data/uniter-large.pt

Weights in loaded but not in model:
cls.predictions.bias
cls.predictions.decoder.weight
cls.predictions.transform.LayerNorm.bias
cls.predictions.transform.LayerNorm.weight
cls.predictions.transform.dense.bias
cls.predictions.transform.dense.weight
feat_regress.bias
feat_regress.net.0.bias
feat_regress.net.0.weight
feat_regress.net.2.bias
feat_regress.net.2.weight
feat_regress.weight
img_embeddings.mask_embedding.weight
itm_output.bias
itm_output.weight
region_classifier.net.0.bias
region_classifier.net.0.weight
region_classifier.net.2.bias
region_classifier.net.2.weight
region_classifier.net.3.bias
region_classifier.net.3.weight

Weights in model but not in loaded:
embeddings.position_ids

Total Iters: 5685
Splits in Train data: ['traindev']
Splits in Valid data: ['dev_seen']
Batches: 2274
/home/ML_courses/DL2020/efratblaier/vilio_env/lib/python3.7/site-packages/torchcontrib/optim/swa.py:130: UserWarning: Casting swa_start, swa_freq to int
  warnings.warn("Casting swa_start, swa_freq to int")
tensor([-0.1822, -1.7926], device='cuda:0')
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 0(250): Train AC 61.80 RA 58.9694 LOSS 682.6611

Epoch(U) 0(250): DEV AC 51.80 RA 60.7816 
Epoch(U) 0(250): BEST AC 51.80 RA 60.7816 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 0(500): Train AC 62.55 RA 61.5910 LOSS 655.7555

Epoch(U) 0(500): DEV AC 53.40 RA 68.8707 
Epoch(U) 0(500): BEST AC 53.40 RA 68.8707 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 0(750): Train AC 63.50 RA 62.8156 LOSS 660.7864

Epoch(U) 0(750): DEV AC 67.00 RA 73.5130 
Epoch(U) 0(750): BEST AC 67.00 RA 73.5130 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 0(1000): Train AC 65.49 RA 66.0683 LOSS 586.9032

Epoch(U) 0(1000): DEV AC 61.60 RA 79.2930 
Epoch(U) 0(1000): BEST AC 61.60 RA 79.2930 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
tensor([-2.9356, -0.0546], device='cuda:0')

Epoch(U) 1(1250): Train AC 81.31 RA 84.7316 LOSS 510.0876

Epoch(U) 1(1250): DEV AC 73.20 RA 83.9705 
Epoch(U) 1(1250): BEST AC 73.20 RA 83.9705 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 1(1500): Train AC 81.34 RA 86.5515 LOSS 439.3252

Epoch(U) 1(1500): DEV AC 65.80 RA 86.7933 
Epoch(U) 1(1500): BEST AC 65.80 RA 86.7933 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 1(1750): Train AC 81.61 RA 86.8542 LOSS 445.3778

Epoch(U) 1(1750): DEV AC 78.00 RA 89.1648 
Epoch(U) 1(1750): BEST AC 78.00 RA 89.1648 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 1(2000): Train AC 81.55 RA 87.1017 LOSS 429.5505

Epoch(U) 1(2000): DEV AC 87.40 RA 92.8934 
Epoch(U) 1(2000): BEST AC 87.40 RA 92.8934 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 1(2250): Train AC 81.97 RA 87.7411 LOSS 404.9048

Epoch(U) 1(2250): DEV AC 87.80 RA 94.4280 
Epoch(U) 1(2250): BEST AC 87.80 RA 94.4280 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
tensor([-0.9953, -0.4614], device='cuda:0')

Epoch(U) 2(2500): Train AC 92.37 RA 96.6328 LOSS 306.0444

Epoch(U) 2(2500): DEV AC 89.20 RA 95.7514 
Epoch(U) 2(2500): BEST AC 89.20 RA 95.7514 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 2(2750): Train AC 92.28 RA 96.7552 LOSS 281.0386

Epoch(U) 2(2750): DEV AC 90.20 RA 97.0348 
Epoch(U) 2(2750): BEST AC 90.20 RA 97.0348 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 2(3000): Train AC 92.32 RA 96.7002 LOSS 281.0304

Epoch(U) 2(3000): DEV AC 91.00 RA 97.6829 
Epoch(U) 2(3000): BEST AC 91.00 RA 97.6829 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 2(3250): Train AC 92.33 RA 96.7170 LOSS 274.9442

Epoch(U) 2(3250): DEV AC 94.80 RA 98.4718 
Epoch(U) 2(3250): BEST AC 94.80 RA 98.4718 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
tensor([-4.7207, -0.0089], device='cuda:0')

Epoch(U) 3(3500): Train AC 97.05 RA 99.5654 LOSS 242.5195

Epoch(U) 3(3500): DEV AC 95.20 RA 99.0671 
Epoch(U) 3(3500): BEST AC 95.20 RA 99.0671 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 3(3750): Train AC 97.46 RA 99.3227 LOSS 125.2610

Epoch(U) 3(3750): DEV AC 96.20 RA 99.2815 
Epoch(U) 3(3750): BEST AC 96.20 RA 99.2815 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 3(4000): Train AC 97.52 RA 99.2503 LOSS 124.0316

Epoch(U) 3(4000): DEV AC 96.80 RA 99.5071 
Epoch(U) 3(4000): BEST AC 96.80 RA 99.5071 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 3(4250): Train AC 97.48 RA 99.2717 LOSS 117.3522

Epoch(U) 3(4250): DEV AC 98.00 RA 99.7792 
Epoch(U) 3(4250): BEST AC 98.00 RA 99.7792 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 3(4500): Train AC 97.19 RA 99.2257 LOSS 173.1623

Epoch(U) 3(4500): DEV AC 95.20 RA 99.4015 
Epoch(U) 3(4500): BEST AC 98.00 RA 99.7792 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
tensor([-1.2392e-03, -6.6938e+00], device='cuda:0')

Epoch(U) 4(4750): Train AC 97.09 RA 99.0679 LOSS 174.5567

Epoch(U) 4(4750): DEV AC 97.00 RA 99.6608 
Epoch(U) 4(4750): BEST AC 98.00 RA 99.7792 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 4(5000): Train AC 97.12 RA 99.1643 LOSS 128.3021

Epoch(U) 4(5000): DEV AC 97.80 RA 99.7008 
Epoch(U) 4(5000): BEST AC 98.00 RA 99.7792 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 4(5250): Train AC 96.78 RA 99.0786 LOSS 177.7958

Epoch(U) 4(5250): DEV AC 98.40 RA 99.5743 
Epoch(U) 4(5250): BEST AC 98.00 RA 99.7792 
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)

Epoch(U) 4(5500): Train AC 96.78 RA 99.0766 LOSS 160.7972

Epoch(U) 4(5500): DEV AC 98.40 RA 99.6487 
Epoch(U) 4(5500): BEST AC 98.00 RA 99.7792 
Load model from ./data/LASTtraindev.pth
Load 1000 data from split(s) test_seen.
Start to load Faster-RCNN detected objects from data/HM_img.tsv
Loaded 1000 images in file data/HM_img.tsv in 77 seconds.
Use 1000 data in torch dataset

/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
/home/ML_courses/DL2020/efratblaier/vilio/entryU.py:174: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  caption_input_ids = torch.tensor(input_ids)
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1000 entries, 0 to 999
Data columns (total 3 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   id      1000 non-null   int64  
 1   proba   1000 non-null   float64
 2   label   1000 non-null   int64  
dtypes: float64(1), int64(2)
memory usage: 23.6 KB
None
Load 2000 data from split(s) test_unseen.
Start to load Faster-RCNN detected objects from data/HM_img.tsv
Loaded 2000 images in file data/HM_img.tsv in 83 seconds.
Use 2000 data in torch dataset

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 2000 entries, 0 to 1999
Data columns (total 3 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   id      2000 non-null   int64  
 1   proba   2000 non-null   float64
 2   label   2000 non-null   int64  
dtypes: float64(1), int64(2)
memory usage: 47.0 KB
None
